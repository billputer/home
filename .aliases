# useful aliases
alias alert="echo -e '\a'"
alias explain='man'
alias dt='date +%Y-%m-%d-%H%M%S'
alias move='rsync -avz --progress --stats'
if [[ -e '/usr/bin/ack-grep' ]]; then alias ack='/usr/bin/ack-grep'; fi
if [[ -e '/usr/bin/htop' ]]; then alias top='/usr/bin/htop'; fi

alias got=git
alias gut=git

if hash nvim >/dev/null 2>&1; then
    alias vi='nvim'
    alias v='nvim'
else
    alias vi='vim'
    alias v='vim'
fi

# ls aliases
if ls --version 2> /dev/null | grep -q 'coreutils'
then
  export GREP_OPTIONS='--color=auto'
  alias ls="ls --color=auto --classify --block-size=\'1"
fi
alias lh='ls -Ad .*'
alias l='ls -AlFht'
alias ll='ls -AlF'
alias la='ls -A'

alias timestamp='gawk "{now=strftime(\"%F %T \"); print now \$0; fflush(); }"'

alias ag='ag -S'

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# find a file with a pattern in name:
function ff() { find . -type f -iname '*'$*'*' -ls ; }

# find a directory with a pattern in name:
function fd() { find . -type d -iname '*'$*'*' -ls ; }

# find a file with pattern $1 in name and Execute $2 on it:
function fe() { find . -type f -iname '*'${1:-}'*' -exec ${2:-file} {} \;  ; }

# find a pattern in a set of files and highlight them:
# (needs a recent version of egrep)
function fs()
{
    OPTIND=1
    local case=""
    local usage="fs: find string in files.
Usage: fs [-i] \"pattern\" [\"filename pattern\"] "
    while getopts :it opt
    do
        case "$opt" in
        i) case="-i " ;;
        *) echo "$usage"; return;;
        esac
    done
    shift $(( $OPTIND - 1 ))
    if [ "$#" -lt 1 ]; then
        echo "$usage"
        return;
    fi
    find . -type f -name "${2:-*}" -print0 | \
    xargs -0 egrep --color=always -sn ${case} "$1" 2>&- | more
}

# find a pattern in a set of files and highlight them:
# (needs a recent version of zegrep)
function zfs()
{
    OPTIND=1
    local case=""
    local usage="zfs: find string in files.
Usage: zfs [-i] \"pattern\" [\"filename pattern\"] "
    while getopts :it opt
    do
        case "$opt" in
        i) case="-i " ;;
        *) echo "$usage"; return;;
        esac
    done
    shift $(( $OPTIND - 1 ))
    if [ "$#" -lt 1 ]; then
        echo "$usage"
        return;
    fi
    find . -type f -name "${2:-*}" -print0 | \
    xargs -0 zegrep --color=always -sn ${case} "$1" 2>&- | more
}

function cuttail() # cut last n lines in file, 10 by default
{
    nlines=${2:-10}
    sed -n -e :a -e "1,${nlines}!{P;N;D;};N;ba" $1
}

calc() { bc <<< "scale=4; $@"; } # quick bc frontend with 4 decimal precision
#title() { echo -ne "\e];$@\007"; } # change terminal/tab title
