# vim: set ts=4 sw=4 tw=4 noet

[user]
	name = Emily St.
	email = hello@emily.st
	signingkey = E24D796803FC1BB5
[include]
	path = ~/.gitconfig.local
[core]
	preloadindex = true
	excludesfile = ~/.gitignore_global
	trustctime = false
	pager = diff-so-fancy | less
	commitGraph = true
[color]
	ui = auto
[color "diff"]
	meta = yellow bold
	commit = green bold
	frag = magenta bold
	old = red bold
	new = green bold
	whitespace = red reverse
[color "diff-highlight"]
	oldNormal = red bold
	oldHighlight = "red bold 52"
	newNormal = "green bold"
	newHighlight = "green bold 22"
[color "branch"]
	current = yellow reverse
	local = yellow
	remote = green
[color "status"]
	added = yellow
	changed = green
	untracked = cyan
[diff]
	indentHeuristic = true
[log]
	date = local
[rerere]
	enabled = true
[pager]
	color = true
[status]
	color = true
	submodulesummary = true
[alias]
	st = status
	ci = commit -av
	c = commit -av
	co = checkout
	lg = "log --pretty=format:'%C(yellow)%h%C(reset) %s %C(cyan)%cI%C(reset) %C(blue)%an%C(reset) %C(green)%d%C(reset)' --graph"
	review = "log --stat=80 --dirstat -p -w --patience --reverse --find-copies-harder --decorate -M -C -C -c"

	ignored = ls-files --others -i --exclude-standard
	st = status -sb
	standup = "!git log --since yesterday --author `git config user.email` --pretty=short"
	up = pull --ff-only --all -p
	praise = blame
	who = blame
	whose-line-is-it-anyway = blame
[push]
	default = current
[status]
	submodulesummary = true
	showUntrackedFiles = all
[commit]
	template = ~/.gitcommittemplate
	gpgsign = true
[http]
	sslVerify = true
[branch]
	autosetuprebase = always
[help]
	autocorrect = 1
[filter "media"]
	clean = git-media-clean %f
	smudge = git-media-smudge %f
[remote "origin"]
	fetch = +refs/pull/*/head:refs/remotes/origin/pull/*
[receive]
	fsckObjects = true
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
[tig]
	show-changes = true
	tab-size = 2
	mouse = true
[tig "color"]
	title-focus = white blue	bold
[init]
	templatedir = ~/.git-templates
[rebase]
	autoStash = true
[pull]
  rebase = true
