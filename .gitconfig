[user]
    name = Emily St.
    email = hello@emily.st
	signingkey = E24D796803FC1BB5
[include]
    path = ~/.gitconfig.local
[giggle]
    main-window-maximized = false
    main-window-geometry = 1018x603+244+123
    history-view-vpane-position = 211
    main-window-view = HistoryView
    file-view-vpane-position = 559
[core]
    preloadindex = true
    excludesfile = ~/.gitignore_global
    trustctime = false
[color]
    ui = always
[color "diff"]
    meta = yellow bold
    commit = green bold
    frag = magenta bold
    old = red bold
    new = green bold
    whitespace = red reverse
[color "diff-highlight"]
    oldNormal = red bold
    oldHighlight = "red bold 52"
    newNormal = "green bold"
    newHighlight = "green bold 22"
[color "branch"]
    current = yellow reverse
    local = yellow
    remote = green
[color "status"]
    added = yellow
    changed = green
    untracked = cyan
[log]
    date = local
[rerere]
    enabled = true
[pager]
    color = true
    diff = diff-so-fancy | less --tabs=4 --pattern='^(added|deleted|modified): '
    show = diff-so-fancy | less --tabs=4 --pattern='^(added|deleted|modified): '
[status]
    color = true
    submodulesummary = true
[alias]
    st = status
    ci = commit -av
    c = commit -av
    co = checkout
    lg = "log --pretty=format:'%C(yellow)%h%C(reset) %s %C(cyan)%cI%C(reset) %C(blue)%an%C(reset) %C(green)%d%C(reset)' --graph"
    review = "log --stat=80 --dirstat -p -w --patience --reverse --find-copies-harder --decorate -M -C -C -c"

    scope = "!sh -c 'git fetch backend && git ksreviewfor `echo $1 | sed -Ee \"s_.*pull/([0-9]+)_refs/pull/origin/\\1_\"` backend/master' -"

    upm = !sh -c 'git fetch --all && git rebase origin/master && git submodule update' -
    plog = !git lg
    d = difftool
    ignored = ls-files --others -i --exclude-standard
    ready = rebase -i @{u}
    st = status -sb
    purr = pull --rebase
    standup = "!git log --since yesterday --author `git config user.email` --pretty=short"
    switch = !legit switch \"$@\"
    branches = !legit branches
    sprout = !legit sprout \"$@\"
    unpublish = !legit unpublish \"$@\"
    harvest = !legit harvest \"$@\"
    sync = !legit sync \"$@\"
    publish = !legit publish \"$@\"
    graft = !legit graft \"$@\"
    up = pull --ff-only --all -p

    ; Find all commits in the given ref that aren't also in master
    ; TODO: Make this take a second optional argument
    find-unmerged-commits = "!sh -c 'git log $1 --format='''%H''' --not master --' -"
    find-unmerged-commits-for = "!sh -c 'git log $1 --format='''%H''' --not $2 --' -"

    ; ksdiff is the bare kaleidoscope difftool alias
    ; ksdiffid is the one that expects $KSID to be set
    ksdiff = difftool -y -t Kaleidoscope
    ksdiffid = difftool -y -t KaleidoscopeWithId

    ; ksdiffwith opens a diff of (current revision)->(given revision)
    ksdiffwith = "!sh -c 'git ksdiff HEAD..$1' -"

    ; ksshow will open a single specific commit in kaleidoscope
    ; it includes the commit log info as a separate file
    ksshow = "!sh -c 'export KSID=`uuidgen`; git log -n1 $1 > .git/LOG_MESSAGE; ksdiff --partial-changeset --UUID $KSID -- /dev/null .git/LOG_MESSAGE; git ksdiffid $1^..$1; ksdiff --mark-changeset-as-closed $KSID' -"

    ; ksreview takes a branch, finds all commits in that branch that aren't
    ; merged into master, and opens them one-by-one with ksshow.  It's good for
    ; reviewing pull requests.
    ksreview = "!sh -c 'git find-unmerged-commits $1 | xargs -n1 git ksshow' -"
    ksreviewfor = "!sh -c 'git find-unmerged-commits-for $1 $2 | xargs -n1 git ksshow' -"
    praise = blame
    who = blame

    diff = "!sh -c 'git diff | diff-so-fancy | less --tabs=4 --pattern=^(added|deleted|modified):'"
[push]
    default = current
[status]
    submodulesummary = true
[advice]
    pushNonFastForward = false
    statusHints = false
    commitBeforeMerge = false
    resolveConflict = false
    implicitIdentity = false
[commit]
    template = ~/.gitcommittemplate
	gpgsign = true
[difftool]
    prompt = false
[http]
    sslVerify = false
[branch]
    autosetuprebase = always
[help]
    autocorrect = 1
[filter "media"]
    clean = git-media-clean %f
    smudge = git-media-smudge %f
; [remote "backend"]
;     fetch = +refs/pull/*/head:refs/pull/origin/*
[url "git@github.banksimple.com:"]
    insteadOf = bh:
    pushInsteadOf = https://github.banksimple.com/
[url "git@github.banksimple.com:BankSimple/"]
    insteadOf = bs:
[url "git@github.banksimple.com:backend/"]
    insteadOf = backend:
[url "git@github.banksimple.com:projects/"]
    insteadOf = projects:
[url "git@github.banksimple.com:internal/"]
    insteadOf = internal:
[url "git@github.banksimple.com:sec/"]
    insteadOf = sec:
[url "git@github.banksimple.com:ops/"]
    insteadOf = ops:
[url "git@github.banksimple.com:partners/"]
    insteadOf = partners:
[url "git@github.banksimple.com:ops/chef-"]
    insteadOf = chef:
[url "git@github.banksimple.com:cookbooks/"]
    insteadOf = cook:
[difftool "Kaleidoscope"]
  cmd = ksdiff --partial-changeset --relative-path \"$MERGED\" -- \"$LOCAL\" \"$REMOTE\"
[difftool "KaleidoscopeWithId"]
    cmd = ksdiff --partial-changeset --UUID \"$KSID\" --relative-path \"$MERGED\" -- \"$LOCAL\" \"$REMOTE\"
[diff]
  tool = Kaleidoscope
[difftool]
  prompt = false

[mergetool "Kaleidoscope"]
  cmd = ksdiff --merge --output \"$MERGED\" --base \"$BASE\" -- \"$LOCAL\" --snapshot \"$REMOTE\" --snapshot
  trustExitCode = true
[mergetool]
  prompt = false
[merge]
  tool = Kaleidoscope
[receive]
	fsckObjects = true
