Home
====

This README explains how I manage my configuration files (my "dot
files"), namely how I distribute them to new machines.


Explanation
-----------

I borrowed the idea from [a blog post] [1] I found while setting up
`zsh` for use. The main innovation is that the bare `git` repo is
stored in a distinct place and accessed using a special alias for
`git`:

    alias home="git --work-tree=$HOME --git-dir=$HOME/.files.git"

Then I add a `.gitignore` file which ignores everything and forcefully
add any files I want to use. No matter where I am on the command line,
I can interact with this repository via the `home` command, and it
keeps things relatively clean without needing a system for deploying
symbolic links.


Distribution via Fabric
-----------------------

TODO


License
-------

Copyright (C) 2013 by Emily Strickland

Permission is hereby granted, free of charge, to any person obtaining a
copy of this software and associated documentation files (the
"Software"), to deal in the Software without restriction, including
without limitation the rights to use, copy, modify, merge, publish,
distribute, sublicense, and/or sell copies of the Software, and to
permit persons to whom the Software is furnished to do so, subject to
the following conditions:

The above copyright notice and this permission notice shall be included
in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

[1]: <http://kylefuller.co.uk/posts/organising-dotfiles-in-a-git-repository/>
